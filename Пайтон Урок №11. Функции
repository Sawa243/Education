import math

def factorial(n):
    return math.factorial(n)

def factorial_list(n):
    fact = factorial(n)
    result = [factorial(i) for i in range(n, 0, -1)]
    return result

# Ввод числа
n = int(input("Введите натуральное число: "))

# Получение факториала числа n
fact_n = factorial(n)
print(f"Факториал числа {n}: {fact_n}")

# Создание списка факториалов от fact_n до 1
factorial_sequence = factorial_list(n)
print(factorial_sequence)


import collections

# Инициализация словаря с питомцами
pets = {
    1: {"Мухтар": {"Вид питомца": "Собака", "Возраст питомца": 9, "Имя владельца": "Павел"}},
    2: {"Каа": {"Вид питомца": "желторотый питон", "Возраст питомца": 19, "Имя владельца": "Саша"}}
}

def get_suffix(age):
    if 11 <= age % 100 <= 19:
        return "лет"
    else:
        last_digit = age % 10
        if last_digit == 1:
            return "год"
        elif 2 <= last_digit <= 4:
            return "года"
        else:
            return "лет"

def get_pet(ID):
    return pets.get(ID, False)

def pets_list():
    for ID, pet_info in pets.items():
        for name, details in pet_info.items():
            suffix = get_suffix(details["Возраст питомца"])
            print(f"ID: {ID}. Это {details['Вид питомца']} по кличке \"{name}\". Возраст питомца: {details['Возраст питомца']} {suffix}. Имя владельца: {details['Имя владельца']}")

def create():
    last = collections.deque(pets, maxlen=1)[0]
    new_id = last + 1
    pet_name = input("Введите имя питомца: ")
    pet_type = input("Введите вид питомца: ")
    pet_age = int(input("Введите возраст питомца: "))
    owner_name = input("Введите имя владельца: ")
    pets[new_id] = {pet_name: {"Вид питомца": pet_type, "Возраст питомца": pet_age, "Имя владельца": owner_name}}

def read():
    ID = int(input("Введите ID питомца: "))
    pet = get_pet(ID)
    if pet:
        for name, details in pet.items():
            suffix = get_suffix(details["Возраст питомца"])
            print(f"Это {details['Вид питомца']} по кличке \"{name}\". Возраст питомца: {details['Возраст питомца']} {suffix}. Имя владельца: {details['Имя владельца']}")
    else:
        print("Питомец с таким ID не найден.")

def update():
    ID = int(input("Введите ID питомца: "))
    pet = get_pet(ID)
    if pet:
        pet_name = list(pet.keys())[0]
        pet_type = input(f"Введите новый вид питомца (текущий: {pet[pet_name]['Вид питомца']}): ")
        pet_age = int(input(f"Введите новый возраст питомца (текущий: {pet[pet_name]['Возраст питомца']}): "))
        owner_name = input(f"Введите новое имя владельца (текущее: {pet[pet_name]['Имя владельца']}): ")
        pets[ID][pet_name] = {"Вид питомца": pet_type, "Возраст питомца": pet_age, "Имя владельца": owner_name}
    else:
        print("Питомец с таким ID не найден.")

def delete():
    ID = int(input("Введите ID питомца: "))
    if ID in pets:
        del pets[ID]
        print(f"Питомец с ID {ID} удален.")
    else:
        print("Питомец с таким ID не найден.")

# Основной цикл программы
command = ""
while command != "stop":
    command = input("Введите команду (create, read, update, delete, list, stop): ").strip().lower()
    if command == "create":
        create()
    elif command == "read":
        read()
    elif command == "update":
        update()
    elif command == "delete":
        delete()
    elif command == "list":
        pets_list()
